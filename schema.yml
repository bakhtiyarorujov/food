openapi: 3.0.3
info:
  title: Spectacular Food API
  version: 1.0.0
  description: Your project description
paths:
  /api/recipe/{id}:
    get:
      operationId: api_recipe_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeSerialzier'
          description: ''
    put:
      operationId: api_recipe_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCreateSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeCreateSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeCreateSerialzier'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCreateSerialzier'
          description: ''
    patch:
      operationId: api_recipe_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecipeCreateSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecipeCreateSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecipeCreateSerialzier'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCreateSerialzier'
          description: ''
    delete:
      operationId: api_recipe_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/recipes:
    get:
      operationId: api_recipes_list
      description: This endpoint is for list and create
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeSerialzier'
          description: ''
    post:
      operationId: api_recipes_create
      description: This endpoint is for list and create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCreateSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeCreateSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeCreateSerialzier'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeCreateSerialzier'
          description: ''
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTokenObtainSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserTokenObtainSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserTokenObtainSerialzier'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenObtainSerialzier'
          description: ''
  /auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    CategorySerialzier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    PatchedRecipeCreateSerialzier:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
        author:
          type: integer
          readOnly: true
        category:
          type: integer
        cover:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            type: integer
    RecipeCreateSerialzier:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
        author:
          type: integer
          readOnly: true
        category:
          type: integer
        cover:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            type: integer
      required:
      - author
      - category
      - content
      - tags
      - title
    RecipeSerialzier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
        author:
          type: integer
          writeOnly: true
        author_name:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategorySerialzier'
        cover:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagSerialzier'
        slug:
          type: string
          readOnly: true
          nullable: true
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - author
      - author_name
      - category
      - content
      - id
      - slug
      - tags
      - title
    TagSerialzier:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
      required:
      - name
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserTokenObtainSerialzier:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
